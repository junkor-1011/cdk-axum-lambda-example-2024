// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snapshot test 1`] = `
{
  "Outputs": {
    "APIusingaxumEndpointC9440207": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "APIusingaxum8A9D4706",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "APIusingaxumDeploymentStageprod487287D3",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "APIusingaxum8A9D4706": {
      "Properties": {
        "Name": "API using axum",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "APIusingaxumANYApiPermissionTestStackAPIusingaxumA1BCEC1CANY3C062F74": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "greetBCC16989",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIusingaxum8A9D4706",
              },
              "/",
              {
                "Ref": "APIusingaxumDeploymentStageprod487287D3",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIusingaxumANYApiPermissionTestTestStackAPIusingaxumA1BCEC1CANY9872B2D5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "greetBCC16989",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIusingaxum8A9D4706",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIusingaxumANYE1473729": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "greetBCC16989",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "APIusingaxum8A9D4706",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "APIusingaxum8A9D4706",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIusingaxumAccount94222D6E": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "APIusingaxum8A9D4706",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "APIusingaxumCloudWatchRoleBAB56E5B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "APIusingaxumCloudWatchRoleBAB56E5B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "APIusingaxumDeployment6E6B4584e89dc2952450bb104d942de798998941": {
      "DependsOn": [
        "APIusingaxumproxyANY659AFAF5",
        "APIusingaxumproxy3F68330B",
        "APIusingaxumANYE1473729",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "APIusingaxum8A9D4706",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "APIusingaxumDeploymentStageprod487287D3": {
      "DependsOn": [
        "APIusingaxumAccount94222D6E",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "APIusingaxumDeployment6E6B4584e89dc2952450bb104d942de798998941",
        },
        "RestApiId": {
          "Ref": "APIusingaxum8A9D4706",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "APIusingaxumproxy3F68330B": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "APIusingaxum8A9D4706",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "APIusingaxum8A9D4706",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIusingaxumproxyANY659AFAF5": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "greetBCC16989",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "APIusingaxumproxy3F68330B",
        },
        "RestApiId": {
          "Ref": "APIusingaxum8A9D4706",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIusingaxumproxyANYApiPermissionTestStackAPIusingaxumA1BCEC1CANYproxy78251743": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "greetBCC16989",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIusingaxum8A9D4706",
              },
              "/",
              {
                "Ref": "APIusingaxumDeploymentStageprod487287D3",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIusingaxumproxyANYApiPermissionTestTestStackAPIusingaxumA1BCEC1CANYproxy743F4289": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "greetBCC16989",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "APIusingaxum8A9D4706",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaWebAdapter787CF7CD": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "greetBCC16989": {
      "DependsOn": [
        "greetServiceRoleDefaultPolicyC77D993D",
        "greetServiceRole099B313F",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "PORT": "3000",
            "RUST_LOG": "debug",
          },
        },
        "Handler": "bootstrap",
        "Layers": [
          {
            "Ref": "LambdaWebAdapter787CF7CD",
          },
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "greetServiceRole099B313F",
            "Arn",
          ],
        },
        "Runtime": "provided.al2023",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "greetServiceRole099B313F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "greetServiceRoleDefaultPolicyC77D993D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "greetServiceRoleDefaultPolicyC77D993D",
        "Roles": [
          {
            "Ref": "greetServiceRole099B313F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
